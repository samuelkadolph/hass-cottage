sleep_bedtime:
  alias: Sleep - Bedtime
  icon: mdi:bed-king
  mode: restart
  sequence:
  - parallel:
    - service: fan.turn_off
      target:
        entity_id: '{{ states.fan | selectattr("state", "eq", "on") | rejectattr("entity_id", "search", "bedroom|sunroom") | rejectattr("attributes.entity_id", "defined") | map(attribute="entity_id") | list }}'
    - service: light.turn_off
      target:
        entity_id: '{{ states.light | selectattr("state", "eq", "on") | rejectattr("entity_id", "search", "bedroom|sunroom") | rejectattr("attributes.entity_id", "defined") | map(attribute="entity_id") | list }}'
    - service: remote.turn_off
      target:
        entity_id: '{{ states.remote | selectattr("state", "eq", "on") | rejectattr("entity_id", "search", "bedroom|sunroom") | rejectattr("attributes.entity_id", "defined") | map(attribute="entity_id") | list }}'
    - service: climate.set_fan_mode
      data: { fan_mode: 'on' }
      target: { entity_id: climate.hallway }
    - service: fan.set_percentage
      data: { percentage: 75 }
      target: { entity_id: fan.master_bedroom_fan }
    - if:
      - '{{ is_state("person.samuel_kadolph", "Cottage") }}'
      - '{{ is_state("input_boolean.sleep_temperature_down", "on") }}'
      then:
      - choose:
        - conditions:
          - '{{ is_state("climate.hallway", "cool") }}'
          sequence:
          - service: climate.set_temperature
            target: { entity_id: climate.hallway }
            data: { temperature: '{{ state_attr("climate.hallway", "temperature") - states("input_number.sleep_temperature_decrement") | int }}' }
        - conditions:
          - '{{ is_state("climate.hallway", "heat_cool") }}'
          sequence:
          - service: climate.set_temperature
            target: { entity_id: climate.hallway }
            data:
              target_temp_high: '{{ state_attr("climate.hallway", "target_temp_high") - states("input_number.sleep_temperature_decrement") | int }}'
              target_temp_low: '{{ state_attr("climate.hallway", "target_temp_low") }}'
    - if:
      - '{{ is_state("person.sasha_keller", "Cottage") }}'
      - '{{ is_state("input_boolean.sleep_bed_preheat", "on") }}'
      then:
      - service: script.sleep_preheat_bed
    - if:
      - '{{ not is_state("person.sasha_keller", "Cottage") }}'
      then:
      - service: light.turn_on
        data: { brightness_pct: 1 }
        target: { entity_id: light.master_bedroom_lights }

sleep_good_morning:
  alias: Sleep - Good Morning
  icon: mdi:white-balance-sunny
  mode: restart
  sequence:
  - parallel:
    - service: climate.set_fan_mode
      data: { fan_mode: 'off' }
      target: { entity_id: climate.hallway }
    - service: light.turn_on
      data: { brightness_pct: 100 }
      target: { entity_id: light.master_bedroom_lights }

sleep_good_night:
  alias: Sleep - Good Night
  icon: mdi:sleep
  mode: restart
  sequence:
  - parallel:
    - service: light.turn_off
      target: { entity_id: light.master_bedroom_lights }

sleep_preheat_bed:
  alias: Sleep - Preheat Bed
  icon: mdi:radiator
  mode: single
  sequence:
  - service: select.select_option
    data: { option: '{{ states("input_number.sleep_bed_preheat_level") | int }}' }
    target: { entity_id: select.master_bed_side_b_heat_level }
